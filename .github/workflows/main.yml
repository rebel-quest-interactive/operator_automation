name: operator_automation

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  newman_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Newman & HTML Reporter
        run: npm install -g newman newman-reporter-htmlextra

      - name: Run ‚ÄúAuth‚Äù and export environment
        run: |
          newman run mock_operator.postman_collection.json \
            --folder Auth \
            -e mock_operator.postman_environment.json \
            --export-environment exported_env_auth.json \
            --reporters cli

      - name: Run ‚ÄúSell‚Äù and export environment
        run: |
          newman run mock_operator.postman_collection.json \
            --folder Sell \
            -e exported_env_auth.json \
            --export-environment exported_env_sell.json \
            --reporters json \
            --reporter-json-export sell-report.json

      - name: Run ‚ÄúWin‚Äù and export environment
        run: |
          newman run mock_operator.postman_collection.json \
            --folder "Credit - Win" \
            -e exported_env_sell.json \
            --export-environment exported_env_win.json \
            --reporters json \
            --reporter-json-export win-report.json

      - name: Run ‚ÄúCancel‚Äù and export environment
        run: |
          newman run mock_operator.postman_collection.json \
            --folder Cancel \
            -e exported_env_win.json \
            --export-environment exported_env_cancel.json \
            --reporters json \
            --reporter-json-export cancel-report.json

      - name: Run ‚ÄúLoss‚Äù and export environment
        run: |
          newman run mock_operator.postman_collection.json \
            --folder "Credit - Loss" \
            -e exported_env_cancel.json \
            --export-environment exported_env_loss.json \
            --reporters json \
            --reporter-json-export loss-report.json

      - name: Merge JSON results into newman-report.json
        run: |
          jq -s '{
            run: {
              stats: {
                requests: {
                  total: (.[0].run.stats.requests.total // 0)
                          + (.[1].run.stats.requests.total // 0)
                          + (.[2].run.stats.requests.total // 0)
                          + (.[3].run.stats.requests.total // 0),
                  failed: (.[0].run.stats.requests.failed // 0)
                          + (.[1].run.stats.requests.failed // 0)
                          + (.[2].run.stats.requests.failed // 0)
                          + (.[3].run.stats.requests.failed // 0)
                }
              },
              failures: (.[0].run.failures // [])
                      + (.[1].run.failures // [])
                      + (.[2].run.failures // [])
                      + (.[3].run.failures // [])
            }
          }' \
            sell-report.json \
            win-report.json \
            cancel-report.json \
            loss-report.json \
          > newman-report.json || echo "{}" > newman-report.json

      - name: Generate a simple HTML summary
        run: |
          TOTAL=$(jq '.run.stats.requests.total' newman-report.json)
          FAILED=$(jq '.run.stats.requests.failed' newman-report.json)
          SUCCESS=$((TOTAL - FAILED))
          cat <<EOF > newman-report.html
<html>
<body>
  <h1>Resultados de pruebas Mock</h1>
  <p>Total de requests: $TOTAL</p>
  <p>‚úÖ √âxito: $SUCCESS</p>
  <p>‚ùå Fallos: $FAILED</p>
</body>
</html>
EOF

      - name: Extraer resultados de ejecuci√≥n (requests)
        id: resultados
        run: |
          if [ -f newman-report.json ]; then
            TOTAL=$(jq '.run.stats.requests.total' newman-report.json)
            FAILED=$(jq '.run.stats.requests.failed' newman-report.json)
            SUCCESS=$((TOTAL - FAILED))
          else
            TOTAL=0
            SUCCESS=0
            FAILED=0
          fi
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "success=$SUCCESS" >> $GITHUB_OUTPUT
          echo "failed=$FAILED" >> $GITHUB_OUTPUT

      - name: Subir solo el HTML como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: newman-report
          path: newman-report.html

      - name: Enviar notificaci√≥n a Slack
        shell: bash
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          ARTIFACTS_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts"
        run: |
          TOTAL="${{ steps.resultados.outputs.total }}"
          SUCCESS="${{ steps.resultados.outputs.success }}"
          FAILED="${{ steps.resultados.outputs.failed }}"

          PAYLOAD='{
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":rocket: *Resultados de pruebas Mock*"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*üìä Total:* '"$TOTAL"'"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*‚úÖ √âxito:* '"$SUCCESS"'"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*‚ùå Fallos:* '"$FAILED"'"
                }
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Ver reporte HTML"
                    },
                    "url": "'"$ARTIFACTS_URL"'"
                  }
                ]
              }
            ]
          }'
          curl -X POST -H 'Content-Type: application/json' --data "$PAYLOAD" "$SLACK_WEBHOOK_URL"
